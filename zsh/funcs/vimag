if [[ -z $1 ]]; then
    # no arg was passed, do an interactive search
    typeset AG_CMD="ag --ignore-case --ignore='*_test.go' --ignore-dir=vendor --ignore-dir=node_modules --ignore-dir=spec --hidden --files-with-matches"
    fzf \
        --exact \
        --ansi \
        --disabled \
        --reverse \
        --print-query \
        --bind "start:reload:$AG_CMD {q}" \
        --bind "change:reload:sleep 0.1; $AG_CMD {q} || true" \
        --bind 'enter:become(vim {1} +{2})' \
        --preview "ag --ignore-case --color --context=2 {q} {}"
else
    # arg was passed, search then pass the results to fzf inside of vim
    local out numResults exit_code
    out=$(ag --ignore-case --ignore-dir=vendor --ignore-dir=node_modules --ignore-dir=spec --hidden --ignore='*_test.go' --ignore-dir=spec ${@:1})
    exit_code=$?
    if [[ $exit_code -ne 0 ]]; then
        echo $out
        return $exit_code
    fi

    numResults=$(echo $out | wc -l | awk '{print $1}')
    if [[ $numResults -ge "2" ]]; then
        vim -c "AgIgnoreTests $1"
    elif [[ $numResults -eq "1" ]]; then
        vim $(echo $out | awk -F':' '{print $1, "+"$2}' -)
    else
        echo "No Results"
    fi
fi

# vim: ft=zsh:
